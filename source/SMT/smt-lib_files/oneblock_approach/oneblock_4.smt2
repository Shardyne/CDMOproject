(set-logic QF_LIA)
(set-option :produce-models true)
; benchmark generated from python API
(set-info :status unknown)
(declare-fun A_0_0_0 () Int)
(declare-fun A_0_0_1 () Int)
(declare-fun A_0_1_0 () Int)
(declare-fun A_0_1_1 () Int)
(declare-fun A_0_2_0 () Int)
(declare-fun A_0_2_1 () Int)
(declare-fun A_1_0_0 () Int)
(declare-fun A_1_0_1 () Int)
(declare-fun A_1_1_0 () Int)
(declare-fun A_1_1_1 () Int)
(declare-fun A_1_2_0 () Int)
(declare-fun A_1_2_1 () Int)
(assert
 (let (($x20 (<= A_0_0_0 4)))
 (let (($x18 (>= A_0_0_0 1)))
 (and $x18 $x20))))
(assert
 (let (($x40 (<= A_0_0_1 4)))
 (let (($x39 (>= A_0_0_1 1)))
 (and $x39 $x40))))
(assert
 (let (($x43 (<= A_0_1_0 4)))
 (let (($x42 (>= A_0_1_0 1)))
 (and $x42 $x43))))
(assert
 (let (($x46 (<= A_0_1_1 4)))
 (let (($x45 (>= A_0_1_1 1)))
 (and $x45 $x46))))
(assert
 (let (($x49 (<= A_0_2_0 4)))
 (let (($x48 (>= A_0_2_0 1)))
 (and $x48 $x49))))
(assert
 (let (($x52 (<= A_0_2_1 4)))
 (let (($x51 (>= A_0_2_1 1)))
 (and $x51 $x52))))
(assert
 (let (($x55 (<= A_1_0_0 4)))
 (let (($x54 (>= A_1_0_0 1)))
 (and $x54 $x55))))
(assert
 (let (($x58 (<= A_1_0_1 4)))
 (let (($x57 (>= A_1_0_1 1)))
 (and $x57 $x58))))
(assert
 (let (($x61 (<= A_1_1_0 4)))
 (let (($x60 (>= A_1_1_0 1)))
 (and $x60 $x61))))
(assert
 (let (($x64 (<= A_1_1_1 4)))
 (let (($x63 (>= A_1_1_1 1)))
 (and $x63 $x64))))
(assert
 (let (($x67 (<= A_1_2_0 4)))
 (let (($x66 (>= A_1_2_0 1)))
 (and $x66 $x67))))
(assert
 (let (($x70 (<= A_1_2_1 4)))
 (let (($x69 (>= A_1_2_1 1)))
 (and $x69 $x70))))
(assert
 (and (distinct A_0_0_0 A_0_0_1) true))
(assert
 (and (distinct A_0_1_0 A_0_1_1) true))
(assert
 (and (distinct A_0_2_0 A_0_2_1) true))
(assert
 (and (distinct A_1_0_0 A_1_0_1) true))
(assert
 (and (distinct A_1_1_0 A_1_1_1) true))
(assert
 (and (distinct A_1_2_0 A_1_2_1) true))
(assert
 (and (distinct A_0_0_0 A_0_0_1 A_1_0_0 A_1_0_1) true))
(assert
 (and (distinct A_0_1_0 A_0_1_1 A_1_1_0 A_1_1_1) true))
(assert
 (and (distinct A_0_2_0 A_0_2_1 A_1_2_0 A_1_2_1) true))
(assert
 (let (($x114 (= A_0_2_0 1)))
 (let ((?x117 (ite $x114 A_0_2_1 (ite (= A_0_2_1 1) A_0_2_0 0))))
 (let (($x118 (= A_1_2_0 1)))
 (let ((?x123 (ite (= ?x117 0) (ite $x118 A_1_2_1 (ite (= A_1_2_1 1) A_1_2_0 0)) ?x117)))
 (let (($x104 (= A_0_1_0 1)))
 (let ((?x107 (ite $x104 A_0_1_1 (ite (= A_0_1_1 1) A_0_1_0 0))))
 (let (($x108 (= A_1_1_0 1)))
 (let ((?x113 (ite (= ?x107 0) (ite $x108 A_1_1_1 (ite (= A_1_1_1 1) A_1_1_0 0)) ?x107)))
 (let (($x93 (= A_0_0_0 1)))
 (let ((?x97 (ite $x93 A_0_0_1 (ite (= A_0_0_1 1) A_0_0_0 0))))
 (let (($x98 (= A_1_0_0 1)))
 (let ((?x103 (ite (= ?x97 0) (ite $x98 A_1_0_1 (ite (= A_1_0_1 1) A_1_0_0 0)) ?x97)))
 (and (distinct ?x103 ?x113 ?x123) true))))))))))))))
(assert
 (let (($x146 (= A_0_2_0 2)))
 (let ((?x149 (ite $x146 A_0_2_1 (ite (= A_0_2_1 2) A_0_2_0 0))))
 (let (($x150 (= A_1_2_0 2)))
 (let ((?x155 (ite (= ?x149 0) (ite $x150 A_1_2_1 (ite (= A_1_2_1 2) A_1_2_0 0)) ?x149)))
 (let (($x136 (= A_0_1_0 2)))
 (let ((?x139 (ite $x136 A_0_1_1 (ite (= A_0_1_1 2) A_0_1_0 0))))
 (let (($x140 (= A_1_1_0 2)))
 (let ((?x145 (ite (= ?x139 0) (ite $x140 A_1_1_1 (ite (= A_1_1_1 2) A_1_1_0 0)) ?x139)))
 (let (($x126 (= A_0_0_0 2)))
 (let ((?x129 (ite $x126 A_0_0_1 (ite (= A_0_0_1 2) A_0_0_0 0))))
 (let (($x130 (= A_1_0_0 2)))
 (let ((?x135 (ite (= ?x129 0) (ite $x130 A_1_0_1 (ite (= A_1_0_1 2) A_1_0_0 0)) ?x129)))
 (and (distinct ?x135 ?x145 ?x155) true))))))))))))))
(assert
 (let (($x178 (= A_0_2_0 3)))
 (let ((?x181 (ite $x178 A_0_2_1 (ite (= A_0_2_1 3) A_0_2_0 0))))
 (let (($x182 (= A_1_2_0 3)))
 (let ((?x187 (ite (= ?x181 0) (ite $x182 A_1_2_1 (ite (= A_1_2_1 3) A_1_2_0 0)) ?x181)))
 (let (($x168 (= A_0_1_0 3)))
 (let ((?x171 (ite $x168 A_0_1_1 (ite (= A_0_1_1 3) A_0_1_0 0))))
 (let (($x172 (= A_1_1_0 3)))
 (let ((?x177 (ite (= ?x171 0) (ite $x172 A_1_1_1 (ite (= A_1_1_1 3) A_1_1_0 0)) ?x171)))
 (let (($x158 (= A_0_0_0 3)))
 (let ((?x161 (ite $x158 A_0_0_1 (ite (= A_0_0_1 3) A_0_0_0 0))))
 (let (($x162 (= A_1_0_0 3)))
 (let ((?x165 (ite $x162 A_1_0_1 (ite (= A_1_0_1 3) A_1_0_0 0))))
 (let ((?x167 (ite (= ?x161 0) ?x165 ?x161)))
 (and (distinct ?x167 ?x177 ?x187) true)))))))))))))))
(assert
 (let (($x209 (= A_0_2_0 4)))
 (let ((?x212 (ite $x209 A_0_2_1 (ite (= A_0_2_1 4) A_0_2_0 0))))
 (let (($x213 (= A_1_2_0 4)))
 (let ((?x218 (ite (= ?x212 0) (ite $x213 A_1_2_1 (ite (= A_1_2_1 4) A_1_2_0 0)) ?x212)))
 (let (($x199 (= A_0_1_0 4)))
 (let ((?x202 (ite $x199 A_0_1_1 (ite (= A_0_1_1 4) A_0_1_0 0))))
 (let (($x203 (= A_1_1_0 4)))
 (let ((?x208 (ite (= ?x202 0) (ite $x203 A_1_1_1 (ite (= A_1_1_1 4) A_1_1_0 0)) ?x202)))
 (let (($x189 (= A_0_0_0 4)))
 (let ((?x192 (ite $x189 A_0_0_1 (ite (= A_0_0_1 4) A_0_0_0 0))))
 (let (($x193 (= A_1_0_0 4)))
 (let ((?x196 (ite $x193 A_1_0_1 (ite (= A_1_0_1 4) A_1_0_0 0))))
 (let ((?x198 (ite (= ?x192 0) ?x196 ?x192)))
 (and (distinct ?x198 ?x208 ?x218) true)))))))))))))))
(assert
 (let (($x115 (= A_0_2_1 1)))
 (let ((?x227 (ite $x115 1 0)))
 (let (($x114 (= A_0_2_0 1)))
 (let ((?x226 (ite $x114 1 0)))
 (let (($x105 (= A_0_1_1 1)))
 (let ((?x224 (ite $x105 1 0)))
 (let (($x104 (= A_0_1_0 1)))
 (let ((?x223 (ite $x104 1 0)))
 (let (($x94 (= A_0_0_1 1)))
 (let ((?x221 (ite $x94 1 0)))
 (let (($x93 (= A_0_0_0 1)))
 (let ((?x220 (ite $x93 1 0)))
 (let ((?x229 (+ (+ ?x220 ?x221) (+ ?x223 ?x224) (+ ?x226 ?x227))))
 (<= ?x229 2)))))))))))))))
(assert
 (let (($x119 (= A_1_2_1 1)))
 (let ((?x240 (ite $x119 1 0)))
 (let (($x118 (= A_1_2_0 1)))
 (let ((?x239 (ite $x118 1 0)))
 (let (($x109 (= A_1_1_1 1)))
 (let ((?x237 (ite $x109 1 0)))
 (let (($x108 (= A_1_1_0 1)))
 (let ((?x236 (ite $x108 1 0)))
 (let (($x99 (= A_1_0_1 1)))
 (let ((?x234 (ite $x99 1 0)))
 (let (($x98 (= A_1_0_0 1)))
 (let ((?x233 (ite $x98 1 0)))
 (let ((?x242 (+ (+ ?x233 ?x234) (+ ?x236 ?x237) (+ ?x239 ?x240))))
 (<= ?x242 2)))))))))))))))
(assert
 (let (($x147 (= A_0_2_1 2)))
 (let ((?x253 (ite $x147 1 0)))
 (let (($x146 (= A_0_2_0 2)))
 (let ((?x252 (ite $x146 1 0)))
 (let (($x137 (= A_0_1_1 2)))
 (let ((?x250 (ite $x137 1 0)))
 (let (($x136 (= A_0_1_0 2)))
 (let ((?x249 (ite $x136 1 0)))
 (let (($x127 (= A_0_0_1 2)))
 (let ((?x247 (ite $x127 1 0)))
 (let (($x126 (= A_0_0_0 2)))
 (let ((?x246 (ite $x126 1 0)))
 (let ((?x255 (+ (+ ?x246 ?x247) (+ ?x249 ?x250) (+ ?x252 ?x253))))
 (<= ?x255 2)))))))))))))))
(assert
 (let (($x151 (= A_1_2_1 2)))
 (let ((?x266 (ite $x151 1 0)))
 (let (($x150 (= A_1_2_0 2)))
 (let ((?x265 (ite $x150 1 0)))
 (let (($x141 (= A_1_1_1 2)))
 (let ((?x263 (ite $x141 1 0)))
 (let (($x140 (= A_1_1_0 2)))
 (let ((?x262 (ite $x140 1 0)))
 (let (($x131 (= A_1_0_1 2)))
 (let ((?x260 (ite $x131 1 0)))
 (let (($x130 (= A_1_0_0 2)))
 (let ((?x259 (ite $x130 1 0)))
 (let ((?x268 (+ (+ ?x259 ?x260) (+ ?x262 ?x263) (+ ?x265 ?x266))))
 (<= ?x268 2)))))))))))))))
(assert
 (let (($x179 (= A_0_2_1 3)))
 (let ((?x279 (ite $x179 1 0)))
 (let (($x178 (= A_0_2_0 3)))
 (let ((?x278 (ite $x178 1 0)))
 (let (($x169 (= A_0_1_1 3)))
 (let ((?x276 (ite $x169 1 0)))
 (let (($x168 (= A_0_1_0 3)))
 (let ((?x275 (ite $x168 1 0)))
 (let (($x159 (= A_0_0_1 3)))
 (let ((?x273 (ite $x159 1 0)))
 (let (($x158 (= A_0_0_0 3)))
 (let ((?x272 (ite $x158 1 0)))
 (let ((?x281 (+ (+ ?x272 ?x273) (+ ?x275 ?x276) (+ ?x278 ?x279))))
 (<= ?x281 2)))))))))))))))
(assert
 (let (($x183 (= A_1_2_1 3)))
 (let ((?x292 (ite $x183 1 0)))
 (let (($x182 (= A_1_2_0 3)))
 (let ((?x291 (ite $x182 1 0)))
 (let (($x173 (= A_1_1_1 3)))
 (let ((?x289 (ite $x173 1 0)))
 (let (($x172 (= A_1_1_0 3)))
 (let ((?x288 (ite $x172 1 0)))
 (let (($x163 (= A_1_0_1 3)))
 (let ((?x286 (ite $x163 1 0)))
 (let (($x162 (= A_1_0_0 3)))
 (let ((?x285 (ite $x162 1 0)))
 (let ((?x294 (+ (+ ?x285 ?x286) (+ ?x288 ?x289) (+ ?x291 ?x292))))
 (<= ?x294 2)))))))))))))))
(assert
 (let (($x210 (= A_0_2_1 4)))
 (let ((?x305 (ite $x210 1 0)))
 (let (($x209 (= A_0_2_0 4)))
 (let ((?x304 (ite $x209 1 0)))
 (let (($x200 (= A_0_1_1 4)))
 (let ((?x302 (ite $x200 1 0)))
 (let (($x199 (= A_0_1_0 4)))
 (let ((?x301 (ite $x199 1 0)))
 (let (($x190 (= A_0_0_1 4)))
 (let ((?x299 (ite $x190 1 0)))
 (let (($x189 (= A_0_0_0 4)))
 (let ((?x298 (ite $x189 1 0)))
 (let ((?x307 (+ (+ ?x298 ?x299) (+ ?x301 ?x302) (+ ?x304 ?x305))))
 (<= ?x307 2)))))))))))))))
(assert
 (let (($x214 (= A_1_2_1 4)))
 (let ((?x318 (ite $x214 1 0)))
 (let (($x213 (= A_1_2_0 4)))
 (let ((?x317 (ite $x213 1 0)))
 (let (($x204 (= A_1_1_1 4)))
 (let ((?x315 (ite $x204 1 0)))
 (let (($x203 (= A_1_1_0 4)))
 (let ((?x314 (ite $x203 1 0)))
 (let (($x194 (= A_1_0_1 4)))
 (let ((?x312 (ite $x194 1 0)))
 (let (($x193 (= A_1_0_0 4)))
 (let ((?x311 (ite $x193 1 0)))
 (let ((?x320 (+ (+ ?x311 ?x312) (+ ?x314 ?x315) (+ ?x317 ?x318))))
 (<= ?x320 2)))))))))))))))
(assert
 (let (($x119 (= A_1_2_1 1)))
 (let ((?x240 (ite $x119 1 0)))
 (let (($x109 (= A_1_1_1 1)))
 (let ((?x237 (ite $x109 1 0)))
 (let (($x99 (= A_1_0_1 1)))
 (let ((?x234 (ite $x99 1 0)))
 (let (($x115 (= A_0_2_1 1)))
 (let ((?x227 (ite $x115 1 0)))
 (let (($x105 (= A_0_1_1 1)))
 (let ((?x224 (ite $x105 1 0)))
 (let (($x94 (= A_0_0_1 1)))
 (let ((?x221 (ite $x94 1 0)))
 (let ((?x328 (+ ?x221 ?x224 ?x227 ?x234 ?x237 ?x240)))
 (let (($x118 (= A_1_2_0 1)))
 (let ((?x239 (ite $x118 1 0)))
 (let (($x108 (= A_1_1_0 1)))
 (let ((?x236 (ite $x108 1 0)))
 (let (($x98 (= A_1_0_0 1)))
 (let ((?x233 (ite $x98 1 0)))
 (let (($x114 (= A_0_2_0 1)))
 (let ((?x226 (ite $x114 1 0)))
 (let (($x104 (= A_0_1_0 1)))
 (let ((?x223 (ite $x104 1 0)))
 (let (($x93 (= A_0_0_0 1)))
 (let ((?x220 (ite $x93 1 0)))
 (let ((?x324 (+ ?x220 ?x223 ?x226 ?x233 ?x236 ?x239)))
 (let ((?x332 (- ?x324 ?x328)))
 (<= (ite (> ?x332 0) ?x332 (- ?x332)) 1)))))))))))))))))))))))))))))
(assert
 (let (($x151 (= A_1_2_1 2)))
 (let ((?x266 (ite $x151 1 0)))
 (let (($x141 (= A_1_1_1 2)))
 (let ((?x263 (ite $x141 1 0)))
 (let (($x131 (= A_1_0_1 2)))
 (let ((?x260 (ite $x131 1 0)))
 (let (($x147 (= A_0_2_1 2)))
 (let ((?x253 (ite $x147 1 0)))
 (let (($x137 (= A_0_1_1 2)))
 (let ((?x250 (ite $x137 1 0)))
 (let (($x127 (= A_0_0_1 2)))
 (let ((?x247 (ite $x127 1 0)))
 (let ((?x329 (+ ?x247 ?x250 ?x253 ?x260 ?x263 ?x266)))
 (let (($x150 (= A_1_2_0 2)))
 (let ((?x265 (ite $x150 1 0)))
 (let (($x140 (= A_1_1_0 2)))
 (let ((?x262 (ite $x140 1 0)))
 (let (($x130 (= A_1_0_0 2)))
 (let ((?x259 (ite $x130 1 0)))
 (let (($x146 (= A_0_2_0 2)))
 (let ((?x252 (ite $x146 1 0)))
 (let (($x136 (= A_0_1_0 2)))
 (let ((?x249 (ite $x136 1 0)))
 (let (($x126 (= A_0_0_0 2)))
 (let ((?x246 (ite $x126 1 0)))
 (let ((?x325 (+ ?x246 ?x249 ?x252 ?x259 ?x262 ?x265)))
 (let ((?x370 (- ?x325 ?x329)))
 (<= (ite (> ?x370 0) ?x370 (- ?x370)) 1)))))))))))))))))))))))))))))
(assert
 (let (($x183 (= A_1_2_1 3)))
 (let ((?x292 (ite $x183 1 0)))
 (let (($x173 (= A_1_1_1 3)))
 (let ((?x289 (ite $x173 1 0)))
 (let (($x163 (= A_1_0_1 3)))
 (let ((?x286 (ite $x163 1 0)))
 (let (($x179 (= A_0_2_1 3)))
 (let ((?x279 (ite $x179 1 0)))
 (let (($x169 (= A_0_1_1 3)))
 (let ((?x276 (ite $x169 1 0)))
 (let (($x159 (= A_0_0_1 3)))
 (let ((?x273 (ite $x159 1 0)))
 (let ((?x330 (+ ?x273 ?x276 ?x279 ?x286 ?x289 ?x292)))
 (let (($x182 (= A_1_2_0 3)))
 (let ((?x291 (ite $x182 1 0)))
 (let (($x172 (= A_1_1_0 3)))
 (let ((?x288 (ite $x172 1 0)))
 (let (($x162 (= A_1_0_0 3)))
 (let ((?x285 (ite $x162 1 0)))
 (let (($x178 (= A_0_2_0 3)))
 (let ((?x278 (ite $x178 1 0)))
 (let (($x168 (= A_0_1_0 3)))
 (let ((?x275 (ite $x168 1 0)))
 (let (($x158 (= A_0_0_0 3)))
 (let ((?x272 (ite $x158 1 0)))
 (let ((?x326 (+ ?x272 ?x275 ?x278 ?x285 ?x288 ?x291)))
 (let ((?x407 (- ?x326 ?x330)))
 (<= (ite (> ?x407 0) ?x407 (- ?x407)) 1)))))))))))))))))))))))))))))
(assert
 (let (($x214 (= A_1_2_1 4)))
 (let ((?x318 (ite $x214 1 0)))
 (let (($x204 (= A_1_1_1 4)))
 (let ((?x315 (ite $x204 1 0)))
 (let (($x194 (= A_1_0_1 4)))
 (let ((?x312 (ite $x194 1 0)))
 (let (($x210 (= A_0_2_1 4)))
 (let ((?x305 (ite $x210 1 0)))
 (let (($x200 (= A_0_1_1 4)))
 (let ((?x302 (ite $x200 1 0)))
 (let (($x190 (= A_0_0_1 4)))
 (let ((?x299 (ite $x190 1 0)))
 (let ((?x331 (+ ?x299 ?x302 ?x305 ?x312 ?x315 ?x318)))
 (let (($x213 (= A_1_2_0 4)))
 (let ((?x317 (ite $x213 1 0)))
 (let (($x203 (= A_1_1_0 4)))
 (let ((?x314 (ite $x203 1 0)))
 (let (($x193 (= A_1_0_0 4)))
 (let ((?x311 (ite $x193 1 0)))
 (let (($x209 (= A_0_2_0 4)))
 (let ((?x304 (ite $x209 1 0)))
 (let (($x199 (= A_0_1_0 4)))
 (let ((?x301 (ite $x199 1 0)))
 (let (($x189 (= A_0_0_0 4)))
 (let ((?x298 (ite $x189 1 0)))
 (let ((?x327 (+ ?x298 ?x301 ?x304 ?x311 ?x314 ?x317)))
 (let ((?x444 (- ?x327 ?x331)))
 (<= (ite (> ?x444 0) ?x444 (- ?x444)) 1)))))))))))))))))))))))))))))
(assert
 (= A_0_0_0 1))
(assert
 (= A_0_0_1 2))
(check-sat)
(get-model)
